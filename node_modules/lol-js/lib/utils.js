// Generated by CoffeeScript 1.9.0
(function() {
  var endsWith, ld;

  ld = require('lodash');

  endsWith = function(str, suffix) {
    return str.slice(-suffix.length) === suffix;
  };

  exports.promiseToCb = function(fn) {
    return function() {
      var args, done, expectedArgs, promise;
      args = Array.prototype.slice.call(arguments, 0);
      done = args.pop();
      if (!ld.isFunction(done)) {
        throw new Error("No callback provided!");
      }
      expectedArgs = fn.length;
      while (args.length < expectedArgs) {
        args.push(void 0);
      }
      promise = fn.apply(this, args);
      return promise.then(function(result) {
        return done(null, result);
      }, function(err) {
        return done(err);
      });
    };
  };

  exports.depromisifyAll = function(obj, options) {
    var key, self, value, _results;
    if (options == null) {
      options = {};
    }
    self = options.isPrototype ? null : obj;
    _results = [];
    for (key in obj) {
      value = obj[key];
      _results.push((function(key, value) {
        var newKey;
        if (key[0] === "_" && !options.includePrivate) {
          return;
        }
        if (endsWith(key, "Async")) {
          newKey = key.slice(0, -5);
          return obj[newKey] = exports.promiseToCb(value);
        }
      })(key, value));
    }
    return _results;
  };

}).call(this);
